[{"/Users/AndrewClowes/source/node/cornly/src/index.js":"1","/Users/AndrewClowes/source/node/cornly/src/App.js":"2","/Users/AndrewClowes/source/node/cornly/src/reportWebVitals.js":"3","/Users/AndrewClowes/source/node/cornly/src/TravelForm.js":"4"},{"size":547,"mtime":1612354702926,"results":"5","hashOfConfig":"6"},{"size":342,"mtime":1612357398373,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1612351409824,"results":"8","hashOfConfig":"6"},{"size":1535,"mtime":1612359265755,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"gd1k3s",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/AndrewClowes/source/node/cornly/src/index.js",[],["20","21"],"/Users/AndrewClowes/source/node/cornly/src/App.js",[],"/Users/AndrewClowes/source/node/cornly/src/reportWebVitals.js",[],"/Users/AndrewClowes/source/node/cornly/src/TravelForm.js",["22"],"import { useState } from 'react'\n\nexport const TravelForm = () => {\n  const [bagsOfCorn, setBagsOfCorn] = useState(0)\n  const [costPerCrossing, setCostPerCrossing] = useState(0.25)\n  const [overallCost, setOverallCost] = useState(null)\n\n  const handleBagsOfCornChange = event => {\n    const { value } = event.target\n    setBagsOfCorn(Math.round(value))\n  }\n\n  const handleCostPerCrossingChange = event => {\n    const { value } = event.target\n    setCostPerCrossing(value)\n  }\n\n  const handleCalculateClick = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const total = bagsOfCorn * costPerCrossing * 2\n    setOverallCost(total)\n  }\n\n  return (\n    <form role=\"form\" className=\"form\">\n      <div className=\"form-group mb-4\">\n        <label htmlFor=\"bags-of-corn\" className=\"control-label\">Bags of corn:</label>\n        <input type=\"text\" pattern=\"\\d*\" className=\"form-control\" name=\"bags-of-corn\" value={bagsOfCorn} onChange={handleBagsOfCornChange}/>\n      </div>\n      <div className=\"form-group mb-4\">\n        <label htmlFor=\"cost-per-crossing\">Cost per crossing (£):</label>\n        <input type=\"number\" className=\"form-control\" id=\"cost-per-crossing\" value={costPerCrossing} onChange={handleCostPerCrossingChange}/>\n      </div>\n      <button className=\"btn btn-primary mb-4\" onClick={handleCalculateClick}>\n        Calculate\n      </button>\n      {overallCost !== null &&\n        <div className=\"result\">\n          <p className=\"cost\">£ {overallCost.toFixed(2)}</p>\n        </div>\n      }\n    </form>\n  )\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":28,"column":5,"nodeType":"29","endLine":28,"endColumn":40},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]